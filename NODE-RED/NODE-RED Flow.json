[
    {
        "id": "4ecf3af7c361c95d",
        "type": "switch",
        "z": "f46f6577c9820501",
        "name": "Route by Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "parking/system/status",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "parking/system/overview",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "parking/sensors/environment",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "parking/actuators/gate/detailed",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "parking/sensors/slots/slot",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 5,
        "x": 900,
        "y": 540,
        "wires": [
            [
                "893f3cc280c4637f"
            ],
            [
                "ce835dfa165d7ad6"
            ],
            [
                "f6db344e130b1e33"
            ],
            [
                "447639e656c50608"
            ],
            [
                "d297cd0ba31b7141"
            ]
        ]
    },
    {
        "id": "893f3cc280c4637f",
        "type": "function",
        "z": "f46f6577c9820501",
        "name": "System Status (UPSERT)",
        "func": "let p;\n\ntry {\n  p = (typeof msg.payload === \"string\" && msg.payload.length > 0) ? JSON.parse(msg.payload) : msg.payload;\n} catch (e) {\n  node.error(`Failed to parse JSON payload: ${e.message}`, msg);\n  return null;\n}\n\nif (!p || typeof p !== 'object' || Object.keys(p).length === 0) {\n  node.warn(\"Received empty or invalid payload, skipping request.\");\n  return null;\n}\n\nmsg.url = \"https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/system_status\";\nmsg.method = \"POST\";\nmsg.headers = {\n  \"Content-Type\": \"application/json\",\n  \"apikey\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\",\n  \"Prefer\": \"resolution=merge-duplicates\"\n};\nmsg.payload = {\n  id: 1,\n  status: p.status ?? \"unknown\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1295.7999877929688,
        "y": 460.79998779296875,
        "wires": [
            [
                "602130a0d977100b"
            ]
        ]
    },
    {
        "id": "602130a0d977100b",
        "type": "http request",
        "z": "f46f6577c9820501",
        "name": "Supabase system_status",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/system_status?on_conflict=id",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1655.7999877929688,
        "y": 460.79998779296875,
        "wires": [
            [
                "1a9b2afa4931ca47"
            ]
        ]
    },
    {
        "id": "ce835dfa165d7ad6",
        "type": "function",
        "z": "f46f6577c9820501",
        "name": "System Overview (UPSERT)",
        "func": "let p;\n\n// Log complete message for debugging\nnode.warn(`=== SYSTEM OVERVIEW DEBUG ===`);\nnode.warn(`Topic: ${msg.topic}`);\nnode.warn(`Raw payload: ${msg.payload} (type: ${typeof msg.payload})`);\nnode.warn(`Payload length: ${msg.payload ? msg.payload.length : 'null/undefined'}`);\n\ntry {\n  // Handle both string and object payloads\n  if (typeof msg.payload === \"string\" && msg.payload.length > 0) {\n    p = JSON.parse(msg.payload);\n  } else if (typeof msg.payload === \"object\" && msg.payload !== null) {\n    p = msg.payload;\n  } else {\n    p = null;\n  }\n} catch (e) {\n  node.error(`Failed to parse JSON payload: ${e.message}`, msg);\n  return null;\n}\n\n// Log parsed payload\nnode.warn(`Parsed payload: ${JSON.stringify(p)} (type: ${typeof p}, isArray: ${Array.isArray(p)})`);\n\n// Better validation - reject empty arrays, null, undefined, or empty objects\nif (!p || Array.isArray(p) || typeof p !== 'object' || Object.keys(p).length === 0) {\n  node.warn(`Received invalid/empty payload, skipping request. Payload: ${JSON.stringify(p)}`);\n  return null;\n}\n\n// Validate that we have the expected properties\nconst requiredFields = ['available_slots', 'gate_open', 'ceiling_closed', 'night_mode', 'rain_detected', 'buzzer_active', 'gate_sensor_before', 'gate_sensor_after', 'rain_sensor_value'];\nconst hasRequiredFields = requiredFields.some(field => p.hasOwnProperty(field));\n\nif (!hasRequiredFields) {\n  node.warn(`Payload missing required system overview fields. Available fields: ${Object.keys(p).join(', ')}`);\n  return null;\n}\n\nmsg.url = \"https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/system_overview\";\nmsg.method = \"POST\";\nmsg.headers = {\n  \"Content-Type\": \"application/json\",\n  \"apikey\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\",\n  \"Prefer\": \"resolution=merge-duplicates\"\n};\nmsg.payload = {\n    id: 1,\n  available_slots: Number(p.available_slots || 0),\n  gate_open: !!p.gate_open,\n  ceiling_closed: !!p.ceiling_closed,\n  night_mode: !!p.night_mode,\n  rain_detected: !!p.rain_detected,\n  buzzer_active: !!p.buzzer_active,\n  gate_sensor_before: !!p.gate_sensor_before,\n  gate_sensor_after: !!p.gate_sensor_after,\n  rain_sensor_value: Number(p.rain_sensor_value || 0)\n};\n\n// Validate payload before sending\nnode.warn(`Final payload to send: ${JSON.stringify(msg.payload)}`);\nnode.warn(`Headers: ${JSON.stringify(msg.headers)}`);\nnode.warn(`Method: ${msg.method}, URL: ${msg.url}`);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1315.7999877929688,
        "y": 520.7999877929688,
        "wires": [
            [
                "9f51352859d2402c"
            ]
        ]
    },
    {
        "id": "9f51352859d2402c",
        "type": "http request",
        "z": "f46f6577c9820501",
        "name": "Supabase system_overview",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/system_overview?on_conflict=id",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1675.7999877929688,
        "y": 520.7999877929688,
        "wires": [
            [
                "1a9b2afa4931ca47"
            ]
        ]
    },
    {
        "id": "f6db344e130b1e33",
        "type": "function",
        "z": "f46f6577c9820501",
        "name": "Environment (INSERT)",
        "func": "let p;\n\ntry {\n  p = (typeof msg.payload === \"string\" && msg.payload.length > 0) ? JSON.parse(msg.payload) : msg.payload;\n} catch (e) {\n  node.error(`Failed to parse JSON payload: ${e.message}`, msg);\n  return null;\n}\n\nif (!p || typeof p !== 'object' || Object.keys(p).length === 0) {\n  node.warn(\"Received empty or invalid payload, skipping request.\");\n  return null;\n}\n\nmsg.url = \"https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/environment\";\nmsg.method = \"POST\";\nmsg.headers = {\n  \"Content-Type\": \"application/json\",\n  \"apikey\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\"\n};\nmsg.payload = {\n  light_level: String(p.light_level ?? \"\"),\n  night_mode: !!p.night_mode,\n  corner_lights: String(p.corner_lights ?? (p.night_mode ? \"on\" : \"off\")),\n  rain_sensor_value: Number(p.rain_sensor_value ?? 0),\n  rain_detected: !!p.rain_detected,\n  rain_threshold: Number(p.rain_threshold ?? 0)\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1285.7999877929688,
        "y": 580.7999877929688,
        "wires": [
            [
                "553b24299c05242d"
            ]
        ]
    },
    {
        "id": "553b24299c05242d",
        "type": "http request",
        "z": "f46f6577c9820501",
        "name": "Supabase environment",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/environment",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1655.7999877929688,
        "y": 580.7999877929688,
        "wires": [
            [
                "1a9b2afa4931ca47"
            ]
        ]
    },
    {
        "id": "447639e656c50608",
        "type": "function",
        "z": "f46f6577c9820501",
        "name": "Gate Status (INSERT/UPDATE)",
        "func": "let p;\n\ntry {\n  p = (typeof msg.payload === \"string\" && msg.payload.length > 0) ? JSON.parse(msg.payload) : msg.payload;\n} catch (e) {\n  node.error(`Failed to parse JSON payload: ${e.message}`, msg);\n  return null;\n}\n\nif (!p || typeof p !== 'object' || Object.keys(p).length === 0) {\n  node.warn(\"Received empty or invalid payload, skipping request.\");\n  return null;\n}\n\nmsg.url = \"https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/gate_status\";\nmsg.method = \"POST\";\nmsg.headers = {\n  \"Content-Type\": \"application/json\",\n  \"apikey\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\"\n};\nmsg.payload = {\n  state: String(p.state ?? \"\"),\n  vehicle_before_gate: !!p.vehicle_before_gate,\n  vehicle_after_gate: !!p.vehicle_after_gate,\n  sensor_before_value: Number(p.sensor_before_value ?? 0),\n  sensor_after_value: Number(p.sensor_after_value ?? 0),\n  auto_close_timeout: Number(p.auto_close_timeout ?? 0),\n  state_duration: Number(p.state_duration ?? 0)\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1305.7999877929688,
        "y": 640.7999877929688,
        "wires": [
            [
                "4d693be3a777a0ba"
            ]
        ]
    },
    {
        "id": "4d693be3a777a0ba",
        "type": "http request",
        "z": "f46f6577c9820501",
        "name": "Supabase gate_status",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/gate_status",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1645.7999877929688,
        "y": 640.7999877929688,
        "wires": [
            [
                "1a9b2afa4931ca47"
            ]
        ]
    },
    {
        "id": "d297cd0ba31b7141",
        "type": "function",
        "z": "f46f6577c9820501",
        "name": "Parking Slots (INSERT on Change)",
        "func": "let p;\n\ntry {\n  p = (typeof msg.payload === \"string\" && msg.payload.length > 0) ? JSON.parse(msg.payload) : msg.payload;\n} catch (e) {\n  node.error(`Failed to parse JSON payload: ${e.message}`, msg);\n  return null;\n}\n\nif (!p || typeof p !== 'object' || Object.keys(p).length === 0) {\n  node.warn(\"Received empty or invalid payload, skipping request.\");\n  return null;\n}\n\nif (p.changed === false) return null;\n\nmsg.url = \"https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/parking_slots\";\nmsg.method = \"POST\";\nmsg.headers = {\n  \"Content-Type\": \"application/json\",\n  \"apikey\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1aGpiaXN3dWtlc3JvbG1idm9wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTg2NjcwMywiZXhwIjoyMDcxNDQyNzAzfQ.hfImxE5gvZMyX3drrLLPeG5rmJXIZc7GBRSOFKqrghE\"\n};\nmsg.payload = {\n  slot_id: Number(p.slot_id),\n  is_occupied: !!p.is_occupied,\n  sensor_raw: Number(p.sensor_raw ?? 0),\n  sensor_filtered: Number(p.sensor_filtered ?? 0),\n  last_changed: Number(p.last_changed ?? Date.now()),\n  stable_readings: Number(p.stable_readings ?? 0),\n  led_status: String(p.led_status ?? (p.is_occupied ? \"red\" : \"green\"))\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1305.7999877929688,
        "y": 720.7999877929688,
        "wires": [
            [
                "d1bdf1295895c97b"
            ]
        ]
    },
    {
        "id": "d1bdf1295895c97b",
        "type": "http request",
        "z": "f46f6577c9820501",
        "name": "Supabase parking_slots",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://fuhjbiswukesrolmbvop.supabase.co/rest/v1/parking_slots",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1665.7999877929688,
        "y": 720.7999877929688,
        "wires": [
            [
                "1a9b2afa4931ca47"
            ]
        ]
    },
    {
        "id": "1a9b2afa4931ca47",
        "type": "function",
        "z": "f46f6577c9820501",
        "name": "Handle Response",
        "func": "if (msg.statusCode >= 400) {\n  node.error(`HTTP Error: ${msg.statusCode}`, msg);\n  return null;\n}\nnode.log(`Success: ${msg.statusCode}`);\nreturn msg;",
        "outputs": 1,
        "x": 1925.7999877929688,
        "y": 580.7999877929688,
        "wires": [
            [
                "6f0e056cde7c047b"
            ]
        ]
    },
    {
        "id": "bcf3892a84e9b502",
        "type": "mqtt in",
        "z": "f46f6577c9820501",
        "name": "",
        "topic": "parking/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "2a50b502c1228f7c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 700,
        "y": 540,
        "wires": [
            [
                "4ecf3af7c361c95d"
            ]
        ]
    },
    {
        "id": "086102ebbc21e496",
        "type": "debug",
        "z": "f46f6577c9820501",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 925.7999877929688,
        "y": 640.7999877929688,
        "wires": []
    },
    {
        "id": "2a50b502c1228f7c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "858a3089681b477597400a3b5c9ba46b.s1.eu.hivemq.cloud",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]